<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<!-- Spring IOC容器扫描的包 ,Spring4支持-->
	<!-- 可以通过resource-pattern来指定扫描的资源
     <context:component-scan base-package="com.annotation"
         resource-pattern="repository/*.class">
         
     </context:component-scan>
      -->
      
      <!-- 可以通过exclude-filter来过滤哪些指定表达式的组件
      <context:component-scan base-package="com.annotation">
          <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Component"/>
         
     </context:component-scan>
     -->
     
     <!-- 通过include-filter和use-default-filters来指定扫描包含哪些默认的组件
     为什么这中间expression如果用component，不起作用?
      
     <context:component-scan base-package="com.annotation" use-default-filters="false">
          <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
         
     </context:component-scan>
     -->
     <!-- 
     <context:component-scan base-package="com.annotation">
          <context:exclude-filter type="assignable" expression="com.annotation.repository.UserRepository"/>
         
     </context:component-scan>
      -->
      
     <!-- 
     <context:component-scan base-package="com.annotation" use-default-filters="false">
          <context:include-filter type="assignable" expression="com.annotation.repository.UserRepository"/>
         
     </context:component-scan>
      -->
      <!-- 使用注解建立bean和bean之间的关系
      autowired自动转配具有兼容类型的bean
       -->
      <context:component-scan base-package="com.annotation" >
         
     </context:component-scan>

</beans>
